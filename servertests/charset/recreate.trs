init

message create a REL file, then try to re-open it (without creating a second dir entry)

# open REL2 file (chan 2), expect 
send :FS_OPEN_RW .len 02 54 3d 4c 32 30 00 00 52 45 4c 32 00 
expect :FS_REPLY .len 02 02 14 00

# send POSITION to record 0 (chan 2), expect OK
send :FS_POSITION .len 02 00 00
expect :FS_REPLY .len 02 00

# read record (READ chan 2), expect record data
# note: will be in multiple read chunks because of buffer length
# restrictions
send :FS_READ .len 02
expect :FS_DATA .len 02 ff .dsb 13,00 ff .dsb 13,00 ff .dsb 13,00 ff

# until here all is part of the firmware OPEN
# here starts the actual test payload

# close file
send :FS_CLOSE .len 02
expect :FS_REPLY .len 02 00 

######################################
message re-open file

# open REL2 file (chan 2), expect 
send :FS_OPEN_RW .len 02 54 3d 4c 32 30 00 00 52 45 4c 32 00 
expect :FS_REPLY .len 02 02 14 00

# send POSITION to record 0 (chan 2), expect OK
send :FS_POSITION .len 02 00 00
expect :FS_REPLY .len 02 00

# read record (READ chan 2), expect record data
# note: will be in multiple read chunks because of buffer length
# restrictions
send :FS_READ .len 02
expect :FS_DATA .len 02 ff .dsb 13,00 ff .dsb 13,00 ff .dsb 13,00 ff

# until here all is part of the firmware OPEN
# here starts the actual test payload

# close file
send :FS_CLOSE .len 02
expect :FS_REPLY .len 02 00 


