diff -ur --new-file vice-2.4+jamexit/src/parallel/parallel.c vice-2.4-jamexit+sock488/src/parallel/parallel.c
--- vice-2.4+jamexit/src/parallel/parallel.c	2012-03-19 22:01:46.000000000 +0100
+++ vice-2.4-jamexit+sock488/src/parallel/parallel.c	2014-07-08 14:54:43.994849203 +0200
@@ -120,7 +120,7 @@
  */
 
 #define NTRANS          8       /* number of possible transitions */
-#define NSTATE          7
+#define NSTATE          8
 
 /* States */
 
@@ -131,6 +131,7 @@
 #define Out1            4
 #define Out1a           5
 #define Out2            6
+#define Mon             7
 
 /* Transitions */
 
@@ -161,9 +162,10 @@
 
 static int state = WaitATN;
 
-#define Go(a)           state=(a);return
+#define Go(a)           state=(a);parallel_debug?log_warning(LOG_DEFAULT,"Go->%d\n",(a)):0;return
 #define isListening()   ((par_status&0xf000)==0x2000)
 #define isTalking()     ((par_status&0xf000)==0x4000)
+#define isMonitoring()  ((par_status&0xf000)==0x8000)
 
 #ifdef PARALLEL_DEBUG_VERBOSE
 static void DoTrans(int tr) {
@@ -228,11 +230,15 @@
         ResetBus();
         Go(WaitATN);
     } else {
+	if (isMonitoring()) {
+		ResetBus();
+		Go(Mon);
+	} else
         if (isListening()) {
             Go(In1);
         } else {
             if (isTalking()) {
-                ResetBus();
+               	ResetBus();
                 if (!parallel_ndac) {  /* old pet... */
                     Go(OldPet);
                 } else {
@@ -240,12 +246,12 @@
                     return;
                 }
             } else {
-                if (parallel_debug)
-                    log_warning(LOG_DEFAULT,
-                                "IEEE488: Ouch, something weird happened: %s got %s",
+               	if (parallel_debug)
+               		log_warning(LOG_DEFAULT,
+                               "IEEE488: Ouch, something weird happened: %s got %s",
                                 State[In1].name, Trans[tr]);
-                ResetBus();
-                Go(WaitATN);
+               	ResetBus();
+               	Go(WaitATN);
             }
         }
     }
@@ -254,15 +260,17 @@
 static void In1_davlo(int tr)
 {
     static BYTE b;
+    static BYTE eof;
 
     parallel_emu_set_nrfd(1);
     b = parallel_bus;
+    eof = parallel_eoi;
     parallel_emu_set_ndac(0);
 
     if (parallel_atn) {
         par_status = parallel_trap_attention(b ^ 0xff);
     } else {
-        par_status = parallel_trap_sendbyte((BYTE)(b ^ 0xff));
+      	par_status = parallel_trap_sendbyte((BYTE)(b ^ 0xff), eof);
     }
     if (parallel_debug)
         log_warning(LOG_DEFAULT,
@@ -312,6 +320,26 @@
         unexpected(tr);
 }
 
+#define Mon_atnlo       WATN_atnlo
+
+static BYTE mon_data;
+static BYTE mon_eoi;
+
+
+static void Mon_davlo(int tr) {
+	mon_data = parallel_bus ^ 0xff;
+	mon_eoi = parallel_eoi;
+}
+
+// when still in Mon state when NDAC goes low, we accept the data taken 
+// when DAV went low
+static void Mon_ndaclo(int tr) {
+    if (!parallel_atn) {
+
+    	par_status = parallel_trap_receivebyte(&mon_data, mon_eoi ? -2 : -1);
+    }
+}
+
 /* OldPET fixed PET2*** and PET3*** IEEE, as well as CBM610 */
 
 #define OPet_atnlo      WATN_atnlo
@@ -341,17 +369,20 @@
 {
     static BYTE b;
 
-    par_status = parallel_trap_receivebyte(&b, 1);
-    parallel_emu_set_bus((BYTE)(b ^ 0xff));
+    if (isTalking()) {
+	    // alternative is Monitoring
+	    par_status = parallel_trap_receivebyte(&b, 1);
+	    parallel_emu_set_bus((BYTE)(b ^ 0xff));
+
+	    if (par_status & 0x40) {
+	        parallel_emu_set_eoi(1);
+	    } else {
+	        parallel_emu_set_eoi(0);
+	    }
 
-    if (par_status & 0x40) {
-        parallel_emu_set_eoi(1);
-    } else {
-        parallel_emu_set_eoi(0);
+	    parallel_emu_set_dav(1);
     }
 
-    parallel_emu_set_dav(1);
-
     Go(Out1a);
 }
 
@@ -407,7 +438,9 @@
     { "Out1a",   { Out1a_atnlo,  unexpected,   unexpected, unexpected,
       unexpected,  Out1a_ndachi, Out1a_nrfdlo, unexpected } },
     { "Out2",    { Out2_atnlo,   unexpected,   unexpected, ignoreown,
-      unexpected,  Out2_ndachi,  unexpected,   unexpected } }
+      unexpected,  Out2_ndachi,  unexpected,   unexpected } },
+    { "Monitor", { Mon_atnlo,    ignore,       Mon_davlo,  ignore,
+      Mon_ndaclo,  ignore,       ignore,       ignore } }
 };
 
 /**************************************************************************
diff -ur --new-file vice-2.4+jamexit/src/parallel/parallel-trap.c vice-2.4-jamexit+sock488/src/parallel/parallel-trap.c
--- vice-2.4+jamexit/src/parallel/parallel-trap.c	2010-12-13 15:14:20.000000000 +0100
+++ vice-2.4-jamexit+sock488/src/parallel/parallel-trap.c	2014-07-08 20:33:20.631450637 +0200
@@ -28,6 +28,7 @@
 #include "vice.h"
 
 #include <stdio.h>
+#include <ctype.h>
 
 #include "attach.h"
 #include "drive.h"
@@ -42,6 +43,8 @@
 #define SERIAL_NAMELENGTH 255
 
 
+
+
 /* On which channel did listen happen to?  */
 static BYTE TrapDevice;
 static BYTE TrapSecondary;
@@ -58,6 +61,150 @@
 static BYTE SerialBuffer[SERIAL_NAMELENGTH + 1];
 static int SerialPtr;
 
+// --------------------------------------------------------------------------------
+
+#define S488_ATN        0x01            /* M->D send a byte with ATN */
+#define S488_SEND       0x02            /* M->D send a byte to device */
+#define S488_REQ        0x03            /* M->D request a byte from device */
+#define S488_OFFER      0x04            /* D->M offer a byte for a receive */
+
+#define S488_ACK        0x40            /* ACKnowledge a byte to receiver as part of a REQ */
+#define S488_EOF        0x80            /* when set on SEND or OFFER, transfer with EOF */
+
+static FILE *trace488File = NULL;
+
+#define	TR488_ATN	1
+#define	TR488_SEND	2
+#define	TR488_RECV	3
+
+static int trace488State = 0;
+static int trace488eof = 0;
+
+static int trace488Buflen = 0;
+static char trace488Buf[4096];
+
+static FILE *getTraceFile(void) {
+	
+	if (trace488File == NULL) {
+		
+		trace488File = fopen("sock488.trace", "w");
+
+		if (trace488File == NULL) {
+			log_warning(parallel_log, "Could not open sock488 trace file\n");
+		}
+	}
+
+	return trace488File;
+}
+
+
+static void s488_close(int doEof) {
+
+	log_warning(parallel_log, "s488_close(st=%d, n=%d, eof=%d)", trace488State, trace488Buflen, doEof);
+
+	if (trace488Buflen > 0) {
+		switch (trace488State) {
+		case TR488_ATN:
+			fprintf(getTraceFile(), "atn");
+			break;
+		case TR488_SEND:
+			if (doEof != 0) {
+				fprintf(getTraceFile(), "send");
+			} else {
+				fprintf(getTraceFile(), "sendnoeof");
+			}
+			break;
+		case TR488_RECV:
+			printf("RECV: doEof=%d\n", doEof);
+			fprintf(getTraceFile(), doEof ? "recv" : "expect");
+			break;
+		}	
+		int i;
+		int isPrint = 0;
+		for(i = 0; i < trace488Buflen; i++) {
+			char c = trace488Buf[i];
+			if (((trace488State == TR488_RECV) || (trace488State == TR488_SEND)) && (isPrint == 0) && (c != '"') && isprint(c)) {
+				fprintf(getTraceFile(), " \"");
+				isPrint = 1;
+			}
+			if ((isPrint == 1) && (c == '"' || !isprint(c))) {
+				fprintf(getTraceFile(), "\"");
+				isPrint = 0;
+			}
+			if (isPrint) {
+				fprintf(getTraceFile(), "%c", c);
+			} else {
+				fprintf(getTraceFile(), " %02x", 255&trace488Buf[i]);
+			}
+		}
+		if (isPrint) {
+			fprintf(getTraceFile(), "\"");
+		}
+		fprintf(getTraceFile(), "\n");
+		fflush(getTraceFile());
+	}
+
+	trace488Buflen = 0;
+	trace488State = 0;
+}
+
+static void s488_attention(int b) {
+
+
+	if (trace488State != 0 && trace488State != TR488_ATN) {
+		s488_close(((trace488State == TR488_RECV) || (trace488State == TR488_SEND)) ? trace488eof : 0);
+	}
+
+	log_warning(parallel_log, "s488_attention(%x)", b);
+
+	trace488State = TR488_ATN;
+	trace488Buf[trace488Buflen++] = b;
+
+	if (b == 0x5f || b == 0x3f) {
+		s488_close(0);
+	}
+}
+
+static void s488_send(BYTE b, int eof) {
+
+
+	if (trace488State != 0 && trace488State != TR488_SEND) {
+		s488_close(0);
+	}
+
+	log_warning(parallel_log, "s488_send(%x, eof=%d)", b, eof);
+
+	trace488State = TR488_SEND;
+	trace488Buf[trace488Buflen++] = b;
+	trace488eof = eof;
+}
+
+static void s488_recv(BYTE b, int fake, int iseof) {
+
+
+	if (trace488State != 0 && trace488State != TR488_RECV) {
+		s488_close(0);
+	}
+
+	log_warning(parallel_log, "s488_recv(%x, fake=%d, iseof=%d)", b, fake, iseof);
+
+	trace488State = TR488_RECV;
+	trace488Buf[trace488Buflen] = b;
+	trace488eof = iseof;
+
+	if (!fake) {
+		trace488Buflen++;
+	}
+	if (iseof && !fake) {
+		s488_close(1);
+	} else
+	if (trace488Buflen > 16) {
+		s488_close(0);
+	}
+}
+
+// --------------------------------------------------------------------------------
+
 /*
    On a real system an opened channel is affected only after having
    received and parsed the complete next open command.
@@ -171,6 +318,8 @@
     serial_t *p;
     void *vdrive;
 
+    s488_attention(b);
+
     if (parallel_debug) {
         log_message(parallel_log, "ParallelAttention(%02x).", b);
     }
@@ -234,16 +383,27 @@
         attention_callback_func();
     }
 
+    if (st & 0xff) {
+    	if ((st & 0xff00) == 0x4800) {
+		// error - start monitoring instead (only on device 8 for now...)
+		st = 0x8800;
+	} else
+	if ((st & 0xff00) == 0x2800) {
+		st = 0x2800;
+	}	
+    }
     return st;
 }
 
-int parallel_trap_sendbyte(BYTE data)
+int parallel_trap_sendbyte(BYTE data, int eof)
 {
     int st = 0;
     serial_t *p;
     void *vdrive;
     unsigned int dnr;
 
+    s488_send(data, eof);
+
     for (dnr = 0; dnr < DRIVE_NUM; dnr++) {
         if ((unsigned int)(TrapDevice & 0x0f) == dnr + 8
             && drive_context[dnr]->drive->enable) {
@@ -283,6 +443,12 @@
     void *vdrive;
     unsigned int dnr;
 
+    if (fake < 0) {
+	// fake -1 is normal, -2 is EOF 
+    	s488_recv(*data, 0, fake == -2);
+	return 0x8800;
+    }
+
     for (dnr = 0; dnr < DRIVE_NUM; dnr++) {
         if ((unsigned int)(TrapDevice & 0x0f) == dnr + 8
             && drive_context[dnr]->drive->enable) {
@@ -343,6 +509,9 @@
     if ((st & 0x40) && eof_callback_func != NULL) {
         eof_callback_func();
     }
+
+    s488_recv(*data, fake, st & 0x40);
+
     return st;
 }
 
diff -ur --new-file vice-2.4+jamexit/src/parallel/parallel-trap.h vice-2.4-jamexit+sock488/src/parallel/parallel-trap.h
--- vice-2.4+jamexit/src/parallel/parallel-trap.h	2009-01-28 10:39:53.000000000 +0100
+++ vice-2.4-jamexit+sock488/src/parallel/parallel-trap.h	2014-07-08 14:55:11.490601963 +0200
@@ -30,7 +30,7 @@
 #include "types.h"
 
 extern int parallel_trap_attention(int b);
-extern int parallel_trap_sendbyte(BYTE data);
+extern int parallel_trap_sendbyte(BYTE data, int eof);
 extern int parallel_trap_receivebyte(BYTE *data, int fake);
 
 #endif
