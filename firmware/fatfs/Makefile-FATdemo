# This Makefile builds ChaN's FatFs monitor / demo 
# Usage: make -f Makefile-FATdemo             
# Uncomment one of the following lines to select your device:

#DEVICE=xs1541
DEVICE=petSD


####################################################################
# Should not be modified

TARGET=FatFs-test-demo

FILES=testdemo.c
DEPS=

all:$(TARGET).hex

USE_FAT=y                       # Enable optional FAT module?

ifeq ($(DEVICE),petSD)
	ARCHDEVICE= -mmcu=atmega1284p
endif

#DEVICEFILES=petSD/ieeehw.c petSD/device.c
#DEVICEDEPS=petSD/device.h petSD/config.h petSD/atn.o petSD/ieeehw.h petSD/device.h

#DEVICEASMOBJ=atn.o

DEVICEFILES+=../petSD/fatfshw.c	    # HW specific code for FatFs
DEVICEFILES+=sdcard.c         # SD card low level routines
DEVICEFILES+=rtc-ds1307.c     # DS1307 Real time clock routines
DEVICEFILES+=i2c.c            # I2C high level routines
DEVICEFILES+=i2c-bb.c         # I2C bit banging routines
DEVICEDEPS+=../petSD/fatfshw.h	    # HW specific defs / protos for FatFs
DEVICEDEPS+=rtc.h             # Real time clock defs  and prototypes
DEVICEDEPS+=i2c.h             # I2C high level routines


## Assembler files
xitoa.o: xitoa.S
	$(CC) $(INCLUDES) $(ARCHDEVICE) $(ASMFLAGS) -c  $<

deviceclean:
	rm -f atn.o


################################################################################
#
# AVR ATMega Architecture
#

ARCHFILES=../avr/uarthw.c ../avr/ledhw.c ../avr/timerhw.c ../avr/avr.c
ARCHDEPS=../avr/compat.h ../avr/delayhw.h ../avr/uarthw.h ../avr/uartints.o ../avr/mem.h ../avr/timerhw.h ../avr/timerint.o xitoa.o
ARCHASMOBJ=../avr/uartints.o ../avr/timerint.o xitoa.o

ARCH=avr

CC=avr-gcc
ARCHINCLUDE=-I/opt/cross/avr/include -I../$(ARCH) 

ASMFLAGS=

# Note that due to me using the "%02x" printf conversion, actually the
# full(!) printf version is required, including the floating point stuff, to be linked.
# That is where the "-Wl,-u,vfprintf -lprintf_flt" option comes from...
CFLAGS=-Wall -gdwarf-2 -std=gnu99 -O1 -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wl,-u,vfprintf -lprintf_flt  $(ARCHINCLUDE) $(ARCHDEVICE) $(DEVICEOPTS) -I../$(DEVICE) -I../

clean: archclean deviceclean rootclean

distclean: clean
	rm $(TARGET) $(TARGET).hex
	
$(TARGET): $(FILES) $(DEPS) $(ARCHDEPS) $(ARCHFILES) $(DEVICEDEPS) $(DEVICEFILES)
	$(CC) $(CFLAGS) -o $(TARGET) $(ARCHASMOBJ) $(DEVICEASMOBJ) $(FILES) $(ARCHFILES) $(DEVICEFILES)


$(TARGET).hex : $(TARGET)
	 avr-objcopy -j .data -j .text -O ihex $< $@

archclean:
	rm -f $(ARCHASMOBJ)

## Assembler files
../avr/%.o: ../avr/%.S
	$(CC) $(INCLUDES) $(ARCHDEVICE) $(ASMFLAGS) -I../$(DEVICE) -o $@ -c  $<




FILES+=ff.c       	# FatFs module
FILES+=option/ccsbcs.c	# Unicode (media) <--> Codepages (application)

DEPS+=ff.h        	# FatFs module
DEPS+=../$(DEVICE)/ffconf.h   	# Configuration file for FatFs module
DEPS+=diskio.h    	# Defs and protos for disk I/O modules
DEPS+=integer.h   	# Integer type definitions for FatFs

rootclean:
	rm -f $(TARGET) $(TARGET).hex

